@model IEnumerable<JustBlog.Core.Entities.Post>

@{
    ViewBag.Title = "Dashboard";
    var users = TempData["users"] as IEnumerable<JustBlog.Ui.Models.ApplicationUser>;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Dashboard</h2>

<p>
    @Html.ActionLink("Create New", "Create", new { id = "" }, new { @class = "btn btn-primary" })
</p>
<style>
    table {
        width: 60%;
    }

    table, th, td {
        text-align: center;
        border: 1px solid black;
        border-collapse: collapse;
    }
    .limited-text {
        white-space: nowrap;
        width: 400px;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(model => model.Title) </th>
        <th>@Html.DisplayNameFor(model => model.Description) </th>
        <th>Author</th>
        <th>@Html.DisplayNameFor(model => model.DateCreated)</th>
        <th>@Html.DisplayNameFor(model => model.DateUpdated)</th>
        <th>@Html.DisplayNameFor(model => model.Status)</th>
        <th colspan="2">Control</th>
    </tr>

@foreach (var item in Model) {
<tr>
    <td> @Html.DisplayFor(modelItem => item.Title, new { @class = "limited-text" })</td>
    <td> @Html.DisplayFor(modelItem => item.Description) </td>
    <td>
        @foreach (var user in users)
        {
            if (user.Id.ToString() == item.AuthorId)
            {
                <p>@user.UserName</p>
            }
        }
    </td>
    <td> @Html.DisplayFor(modelItem => item.DateCreated) </td>
    <td> @Html.DisplayFor(modelItem => item.DateUpdated) </td>
    <td> @Html.DisplayFor(modelItem => item.Status) </td>
    <td> @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning" }) </td>
    <td> @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" }) </td>
</tr>
    
}

</table>
